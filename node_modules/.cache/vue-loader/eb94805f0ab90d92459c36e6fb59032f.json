{"remainingRequest":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/confirm/Confirm.vue?vue&type=template&id=ba8bb20c&scoped=true&","dependencies":[{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/confirm/Confirm.vue","mtime":1614310646991},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}