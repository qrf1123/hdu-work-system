{"remainingRequest":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/Form.vue?vue&type=template&id=35cb758b&scoped=true&","dependencies":[{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/Form.vue","mtime":1605768204000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}