{"remainingRequest":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/Publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/Publish.vue","mtime":1618155602796},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUb3BOYXYgZnJvbSAnQC9jb21wb25lbnRzL2NvbW1vbi9Ub3BOYXYudnVlJwppbXBvcnQgQm90dG9tTmF2IGZyb20gJ0AvY29tcG9uZW50cy90ZWFjaGVyL0JvdHRvbU5hdi52dWUnCi8vIGltcG9ydCBMaXN0TGF5b3V0IGZyb20gJ0AvY29tcG9uZW50cy9jb21tb24vTGlzdExheW91dC52dWUnCmltcG9ydCBUYWJzIGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvY29tbW9uL1RhYnMudnVlJwppbXBvcnQgc2hlbnBpIGZyb20gJy4vc2hlbnBpLnZ1ZScKaW1wb3J0IG15c3RhdGlvbnMgZnJvbSAnLi9teXN0YXRpb25zLnZ1ZScKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwdWJsaXNoTGlzdDogW10sCiAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICBwcm9jZXNzU3RhdHVzOiAwLAogICAgICAgICAgICBwYWdlTnVtOiAxLAogICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgZmluaXNoZWQ6IGZhbHNlCiAgICAgICAgfQogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBUb3BOYXYsCiAgICAgICAgQm90dG9tTmF2LAogICAgICAgIC8vIExpc3RMYXlvdXQsCiAgICAgICAgVGFicywKICAgICAgICBzaGVucGksCiAgICAgICAgbXlzdGF0aW9ucwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBoYW5kbGVEZWxldGUoaW5kZXgsaWQpIHsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wdWJsaXNoTGlzdFtpbmRleF0pCiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJGFqYXgucG9zdCgnL2FwaS9hY3Rpdml0aS9kZWxldGVQcm9jZXNzJywge3Byb2Nlc3NJbnN0YW5jZUlkOiBpZH0pCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKQogICAgICAgICAgICBpZihyZXMuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgIHRoaXMucHVibGlzaExpc3Quc3BsaWNlKGluZGV4LDEpCiAgICAgICAgICAgICAgICB0aGlzLiR0b2FzdC5zdWNjZXNzKHJlcy5tc2cpCiAgICAgICAgICAgIH1lbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuJHRvYXN0LmZhaWwoJ+WIoOmZpOWksei0pe+8jOivt+eojeWQjumHjeivle+8gScpCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGhhbmRsZURldGFpbChpZCkgewogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICBwYXRoOiAnL2pvYkluZm8nLAogICAgICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICAgICAgICBwcm9jZXNzSW5zdGFuY2VJZDogaWQKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIC8vIG9uTG9hZCgpIHsKICAgICAgICAvLyAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgLy8gICAgICAgICB0aGlzLnBhZ2VOdW0rKwogICAgICAgIC8vICAgICAgICAgdGhpcy5nZXRQdWJsaXNoKCkKICAgICAgICAvLyAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgICAgLy8gICAgIH0sMTAwMCkKICAgICAgICAvLyB9LAogICAgICAgIGFzeW5jIGdldFB1Ymxpc2goKSB7CiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJGFqYXguZ2V0KGAvc3lzdGVtL2Zsb3dzL3F1ZXJ5TXlGbG93c2ApCiAgICAgICAgICAgIGlmKHJlcy5kYXRhLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgcmVzLmRhdGEuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgICAgIGl0ZW0uY3JlYXRlVGltZSA9IGl0ZW0uY3JlYXRlVGltZS5zbGljZSgwLDEwKTsKICAgICAgICAgICAgICAgICAgICAvL+ayoeacieabtOaWsOaXtumXtCDpgqPkuYjmm7TmlrDml7bpl7TkuLrliJvlu7rml7bpl7QKICAgICAgICAgICAgICAgICAgICBpZighaXRlbS51cGRhdGVUaW1lKXsKICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS51cGRhdGVUaW1lID0gaXRlbS5jcmVhdGVUaW1lOwogICAgICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnVwZGF0ZVRpbWUgPSBpdGVtLnVwZGF0ZVRpbWUuc2xpY2UoMCwxMCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoaXRlbS5mbG93U3RhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgIjEiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uZmxvd1N0YXRlID0gIuW3suW9kuahoyIgLy8g5pqC5LiU6K6k5Li65pivIOWuoeaguOmAmui/h+eahOWPrQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiMiI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5mbG93U3RhdGUgPSAi5bey5Yig6ZmkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiMyI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5mbG93U3RhdGUgPSAi5a6h5om55LitIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiNCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5mbG93U3RhdGUgPSAi6KKr6amz5ZueIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB0aGlzLnB1Ymxpc2hMaXN0ID0gcmVzLmRhdGEuZGF0YQogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wdWJsaXNoTGlzdCk7CiAgICAgICAgICAgICAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgfSwKICAgICAgIAogICAgICAgIGFzeW5jIGhhbmRsZVN0ZXAocHJvY2Vzc0lkKSB7CiAgICAgICAgICAgIHRoaXMuc2hvdyA9IHRydWUKICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kYWpheC5nZXQoJy9hcGkvYWN0aXZpdGkvcXVlcnlUYXNrRGV0YWlscycsIHtwYXJhbXM6IHtwcm9jZXNzSW5zdGFuY2VJZDogcHJvY2Vzc0lkfX0pCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKQogICAgICAgICAgICBjb25zdCBzdGF0dXMgPSByZXMuZGF0YS5kYXRhWzBdLnJlamVjdFN0YXR1cwogICAgICAgICAgICB0aGlzLnByb2Nlc3NTdGF0dXMgPSBwYXJzZUludChzdGF0dXMpCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5nZXRQdWJsaXNoKCkKICAgIH0KfQo="},{"version":3,"sources":["Publish.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Publish.vue","sourceRoot":"src/views/teacher/publish","sourcesContent":["<template>\n    <div class=\"publish\">\n        <top-nav title=\"发布管理\" :isShow=\"false\" />\n        <van-cell center title=\"发布用工\" icon=\"wap-nav\">\n            <template #right-icon>\n                <van-icon name=\"plus\" @click=\"$router.push('/publishment')\" size=\"16\"/>\n            </template>\n        </van-cell>\n        <tabs>\n            <shenpi/>\n            <mystations/>\n        </tabs>\n        <bottom-nav :active=\"3\"/>\n    </div>\n</template>\n\n<script>\nimport TopNav from '@/components/common/TopNav.vue'\nimport BottomNav from '@/components/teacher/BottomNav.vue'\n// import ListLayout from '@/components/common/ListLayout.vue'\nimport Tabs from '../../../components/common/Tabs.vue'\nimport shenpi from './shenpi.vue'\nimport mystations from './mystations.vue'\nexport default {\n    data() {\n        return {\n            publishList: [],\n            show: false,\n            processStatus: 0,\n            pageNum: 1,\n            loading: false,\n            finished: false\n        }\n    },\n    components: {\n        TopNav,\n        BottomNav,\n        // ListLayout,\n        Tabs,\n        shenpi,\n        mystations\n    },\n    methods: {\n        async handleDelete(index,id) {\n            console.log(this.publishList[index])\n            const res = await this.$ajax.post('/api/activiti/deleteProcess', {processInstanceId: id})\n            console.log(res.data)\n            if(res.data.code === 200) {\n                this.publishList.splice(index,1)\n                this.$toast.success(res.msg)\n            }else {\n                this.$toast.fail('删除失败，请稍后重试！')\n            }\n        },\n        handleDetail(id) {\n            this.$router.push({\n                path: '/jobInfo',\n                query: {\n                    processInstanceId: id\n                }\n            })\n        },\n        // onLoad() {\n        //     setTimeout(() => {\n        //         this.pageNum++\n        //         this.getPublish()\n        //         this.loading = false\n        //     },1000)\n        // },\n        async getPublish() {\n            const res = await this.$ajax.get(`/system/flows/queryMyFlows`)\n            if(res.data.code === 200) {\n                res.data.data.forEach(item => {\n                    item.createTime = item.createTime.slice(0,10);\n                    //没有更新时间 那么更新时间为创建时间\n                    if(!item.updateTime){\n                        item.updateTime = item.createTime;\n                    }else{\n                        item.updateTime = item.updateTime.slice(0,10);\n                    }\n                    switch (item.flowState) {\n                            case \"1\":\n                                item.flowState = \"已归档\" // 暂且认为是 审核通过的叭\n                                break;\n                            case \"2\":\n                                item.flowState = \"已删除\"\n                                break;\n                            case \"3\":\n                                item.flowState = \"审批中\"\n                                break;\n                            case \"4\":\n                                item.flowState = \"被驳回\"\n                                break;\n                            default:\n                                break;\n                        }\n                });\n                this.publishList = res.data.data\n                console.log(this.publishList);\n                this.finished = true\n                \n            }\n            \n        },\n       \n        async handleStep(processId) {\n            this.show = true\n            const res = await this.$ajax.get('/api/activiti/queryTaskDetails', {params: {processInstanceId: processId}})\n            console.log(res.data)\n            const status = res.data.data[0].rejectStatus\n            this.processStatus = parseInt(status)\n        }\n    },\n    mounted() {\n        this.getPublish()\n    }\n}\n</script>\n\n<style scoped>\n    .middle {\n        margin: 0 10px;\n    }\n    .van-cell {\n        margin-bottom: 10px;\n    }\n</style>"]}]}