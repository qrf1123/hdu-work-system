{"remainingRequest":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/admission/Admission.vue?vue&type=style&index=0&id=391c188c&scoped=true&lang=css&","dependencies":[{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/admission/Admission.vue","mtime":1614310649843},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hZG1pc3Npb24gewogICAgcGFkZGluZy1ib3R0b206IDEwMHB4Owp9Ci50aXRsZSBkaXYgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLnZhbi1jZWxsCi50aXRsZSBkaXYgaDQgewogICAgbWFyZ2luLWxlZnQ6IDE1cHg7CiAgICB3aWR0aDogNjAlOwp9Ci52YW4tY29sbGFwc2UtaXRlbSA+Pj4gLnZhbi1jZWxsX19yaWdodC1pY29uIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiA4cHg7CiAgICBjb2xvcjogIzk2OTc5OTsKfQoudGl0bGUgZGl2IHNwYW46bnRoLWNoaWxkKDEpIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogNnB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDgxLCAxMjUsIDI1Mik7CiAgICB3aWR0aDogMTBweDsKICAgIGhlaWdodDogMTBweDsKICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoudGl0bGUgZGl2IHNwYW46bnRoLWNoaWxkKDMpIHsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGNvbG9yOiAjNjY2OwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IDEycHg7CiAgICB0b3A6IDFweDsKfQoudGl0bGUgcCB7CiAgICBtYXJnaW4tbGVmdDogMjBweDsKICAgIGNvbG9yOiAjNTU1Owp9CnVsIGxpIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBoZWlnaHQ6IDM1cHg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci52YW4tY2VsbCB7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2VlZTsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIGJvdHRvbTogNDlweDsKfQo="},{"version":3,"sources":["Admission.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Admission.vue","sourceRoot":"src/views/teacher/admission","sourcesContent":["<template>\n    <div class=\"admission\">\n        <top-nav title=\"录取管理\" :isShow=\"false\" />\n        <van-collapse v-model=\"activeNames\">\n            <van-checkbox-group ref=\"checkboxGroup\" v-model=\"result\">\n            <van-collapse-item v-for=\"(item,index) in list\" :key=\"index\" :name=\"index + 1\">\n                <template #title>\n                    <div class=\"title\">\n                        <div>\n                            <span></span>\n                            <h4>{{item.stationSubject}}</h4>\n                            <span>{{item.publishDate}}</span>\n                        </div>\n                        <p>\n                            <span>所需人数：{{item.commitNum}}/{{item.totalNum}}人</span>\n                        </p>\n                    </div>\n                </template>\n                    <ul class=\"studentList\">\n                        <li>\n                            <van-button color=\"rgb(81, 125, 252)\" @click=\"handleManual\" size=\"mini\">添加学生</van-button>\n                        </li>\n                        <li v-for=\"employeeStudent in item.employeeStudentVoList\" :key=\"employeeStudent.applyId\">\n                            <van-checkbox :disabled=\"employeeStudent.stateCode !== '0'\" :name=\"item.id+','+employeeStudent.applyIid\">{{employeeStudent.studentName}}</van-checkbox>\n                            <van-button color=\"rgb(81, 125, 252)\" @click=\"handleEmploy(employeeStudent.applyIid)\" size=\"mini\" plain>{{employeeStudent.state}}</van-button>\n                        </li>\n                    </ul>\n            </van-collapse-item>\n            </van-checkbox-group>\n        </van-collapse>\n        <van-cell @click=\"handleSelectAll\" clickable>\n            <van-checkbox v-model=\"checked\">全选</van-checkbox>\n            <template #right-icon>\n                <van-button color=\"rgb(81, 125, 252)\" size=\"mini\">一键录取</van-button>\n            </template>\n        </van-cell>\n        <bottom-nav :active=\"4\"/>\n    </div>\n</template>\n\n<script>\nimport TopNav from '@/components/common/TopNav.vue'\nimport BottomNav from '@/components/teacher/BottomNav.vue'\nexport default {\n    data() {\n        return {\n            result: [],\n            list: [],\n            checked: false,\n            activeNames: [''],\n        };\n    },\n    components: {\n        TopNav,\n        BottomNav\n    },\n    methods: {\n        handleSelectAll(e) {\n            let className = e.target.className\n            if(className.includes('van-checkbox') || className.includes('van-icon-success')) {\n                if(this.checked) {\n                    this.$refs.checkboxGroup.toggleAll(false);\n                }else {\n                    this.$refs.checkboxGroup.toggleAll(true);\n                }\n            }else if(className.includes('van-button')) {\n                this.$dialog.confirm({\n                    message: '确定一键录取选中学生吗？'\n                }).then(() => {\n                    const obj = this.translateToObj(this.result)\n                    const arr = this.translateToArr(obj)\n                    console.log(arr)\n                }).catch(() => {})\n            }\n        },\n        handleEmploy(applyId) {\n            this.$router.push({name: 'StudentDetail', params: {applyId: applyId}})\n        },\n        handleManual() {\n            this.$router.push('/manualDeal')\n        },\n        async getEmployLists() {\n            const res = await this.$ajax.get('/api/station/myStationManagement')\n            if(res.data.code === 200) {\n                this.list = res.data.data\n            }\n            console.log(this.list)\n        },\n        translateToObj(arr) {\n            return arr.reduce((acc,cur) => {\n            let splitData = cur.split(',')\n            let stationId, applyId\n            stationId = parseInt(splitData[0])\n            applyId = parseInt(splitData[1])\n            if(stationId in acc) {\n                acc[stationId].push(applyId)\n            }else {\n                acc[stationId] = [applyId]\n            }\n            return acc\n        },{})\n        },\n        translateToArr(obj) {\n            const data = []\n            for(let key in obj) {\n                let result = {}\n                result.stationId = parseInt(key)\n                result.applyId = obj[key]\n                data.push(result)\n            }\n            return data\n        },\n        getEmpolyStatus() {\n\n        }\n    },\n    mounted() {\n        this.getEmployLists()\n    }\n}\n</script>\n\n\n<style scoped>\n    .admission {\n        padding-bottom: 100px;\n    }\n    .title div {\n        position: relative;\n        display: flex;\n        align-items: center;\n    }\n    .van-cell\n    .title div h4 {\n        margin-left: 15px;\n        width: 60%;\n    }\n    .van-collapse-item >>> .van-cell__right-icon {\n        position: absolute;\n        right: 8px;\n        color: #969799;\n    }\n    .title div span:nth-child(1) {\n        position: absolute;\n        top: 6px;\n        background-color: rgb(81, 125, 252);\n        width: 10px;\n        height: 10px;\n        border-radius: 50%;\n    }\n    .title div span:nth-child(3) {\n        font-size: 12px;\n        color: #666;\n        position: absolute;\n        right: 12px;\n        top: 1px;\n    }\n    .title p {\n        margin-left: 20px;\n        color: #555;\n    }\n    ul li {\n        display: flex;\n        height: 35px;\n        justify-content: space-between;\n        align-items: center;\n    }\n    .van-cell {\n        border-top: 1px solid #eee;\n        position: fixed;\n        bottom: 49px;\n    }\n</style>"]}]}