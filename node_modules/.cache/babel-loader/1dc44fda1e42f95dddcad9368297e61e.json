{"remainingRequest":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/thread-loader/dist/cjs.js!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/babel-loader/lib/index.js!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/shenpi.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/shenpi.vue","mtime":1619628534623},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["shenpi.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <van-tab title=\"审批流程\">\n        <!-- 查看审批流程中间过程的的  -->\n        <van-dialog v-model=\"show\">\n            <van-steps :active=\"0\" direction=\"vertical\" active-color=\"rgb(36, 126, 255)\" active-icon=\"success\">\n            <!-- <van-steps :active=\"0\" direction=\"vertical\" active-color=\"rgb(36, 126, 255)\" active-icon=\"cross\"> -->\n                <!-- <van-step v-for=\"(item,index) in flowSteps\" :key=\"index\">{{item.nickName}}</van-step> -->\n                <van-step >用工老师</van-step>\n                <van-step >本部门/学院二级管理员</van-step>\n            </van-steps>\n        </van-dialog>\n        <ul class=\"list\">\n            <!-- <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"加载完成!!!\" @load=\"onLoad\"> -->\n            <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"加载完成!!!\" >\n                <list-layout :firstLayout=\"0\" v-for=\"(item,index) in publishList\" :key=\"index\">\n                    <van-icon size=\"40\" color=\"rgb(81, 125, 252)\" name=\"info\" slot=\"left-icon\"/>\n                    <div slot=\"content\">\n                        <h4>{{item.flowName}}</h4>\n                        <div>\n                            <span>{{item.updateTime}}</span>\n                        </div>\n                    </div>\n                    <div slot=\"right\">\n                        <span class=\"date\">{{item.flowState}}</span>\n                        <div class=\"right-bottom\">\n                            <van-icon v-if=\"item.flowState === '被驳回'\"  @click=\"toEdit(item.flowId,item.flowName)\" size=\"20\" color=\"rgb(81, 125, 252)\" name=\"edit\"/>\n                            <van-button style=\"margin-left: 10px\" v-if=\"item.flowState === '审核中'\" color=\"rgb(81, 125, 252)\" size=\"mini\" @click=\"handleStep(item.flowId)\">查看审批</van-button>\n                            <van-button v-if=\"item.flowState === '被驳回' \" style=\"margin-left: 10px\"  color=\"rgb(81, 125, 252)\" size=\"mini\" @click=\"deleteFlowApply(item.flowId)\">删除申请</van-button>\n                        </div>\n                    </div>\n                </list-layout>\n            </van-list>\n        </ul>\n    </van-tab>\n</template>\n\n<script>\nimport ListLayout from '@/components/common/ListLayout.vue'\nexport default {\n    data() {\n        return {\n            publishList: [],\n            show: false,\n            processStatus: 1,\n            pageNum: 1,\n            loading: false,\n            finished: false,\n            flowSteps:[]\n        }\n    },\n    components: {\n        // TopNav,\n        // BottomNav,\n        ListLayout,\n        // Tabs,\n        // shenpi,\n        // mystations\n    },\n    methods: {\n        async handleDelete(index,id) {\n            console.log(this.publishList[index])\n            const res = await this.$ajax.post('/api/activiti/deleteProcess', {processInstanceId: id})\n            console.log(res.data)\n            if(res.data.code === 200) {\n                this.publishList.splice(index,1)\n                this.$toast.success(res.msg)\n            }else {\n                this.$toast.fail('删除失败，请稍后重试！')\n            }\n        },\n        async deleteFlowApply(id){\n            const res = await this.$ajax.post('/system/flows/deleteFlow',{flowId:id})\n            if(res.data.code === 200){\n                this.$toast(\"删除成功\");\n                this.finished = false;\n                this.getPublish()\n            }else{\n                this.$toast(\"删除失败，请重试\")\n            }\n        },\n        toEdit(flowId,flowName){\n            console.log(flowId,flowName);\n            this.$router.push({path:'/edit',query:{flowId : flowId,flowName : flowName}})\n        },\n        // handleDetail(item) {\n        //     this.$router.push({\n        //         path: '/jobInfo',\n        //         query: {\n        //             item: item\n        //         }\n        //     })\n        // },\n        async getPublish() {\n            const res = await this.$ajax.get(`/system/flows/queryMyFlows`)\n            if(res.data.code === 200) {\n                res.data.data.forEach(item => {\n                    item.createTime = item.createTime.slice(0,10);\n                    //没有更新时间 那么更新时间为创建时间\n                    if(!item.updateTime){\n                        item.updateTime = item.createTime;\n                    }else{\n                        item.updateTime = item.updateTime.slice(0,10);\n                    }\n                    switch (item.flowState) {\n                            case \"1\":\n                                item.flowState = \"已归档\" // 暂且认为是 审核通过的叭\n                                break;\n                            case \"2\":\n                                item.flowState = \"已删除\"\n                                break;\n                            case \"3\":\n                                item.flowState = \"审核中\"\n                                break;\n                            case \"4\":\n                                item.flowState = \"被驳回\"\n                                break;\n                            default:\n                                break;\n                        }\n                });\n                this.publishList = res.data.data\n                console.log(this.publishList);\n                this.finished = true\n            }\n        },\n        async handleStep(processId) {\n            this.show = true\n            const res = await this.$ajax.get('/system/flows/queryFlowOpers', {params: {flowId: processId}})\n            this.flowSteps = res.data.data\n            // this.flowSteps.forEach(item => {\n            //     if(item.)\n            // });\n            console.log(this.flowSteps);\n            this.flowSteps = this.sortAscByKey(this.flowSteps,(\"operStatus\"))\n            console.log(this.flowSteps);\n        },\n        sortAscByKey(arr,key){\n            return arr.sort((a,b)=>{\n                let x = a[key];\n                let y = b[key];\n                return ((x<y)?-1:(x>y)?1:0)\n             })\n        }\n    },\n    mounted() {\n        this.getPublish()\n    }\n}\n</script>\n\n<style scoped>\n    .middle {\n        margin: 0 10px;\n    }\n    .van-cell {\n        margin-bottom: 10px;\n    }\n</style>"],"sourceRoot":"src/views/teacher/publish"}]}