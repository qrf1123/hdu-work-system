{"remainingRequest":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/thread-loader/dist/cjs.js!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/babel-loader/lib/index.js!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/mystations.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/src/views/teacher/publish/mystations.vue","mtime":1618155590255},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenrixin/HDUWorkStudy/Mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["mystations.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <van-tab title=\"我的岗位\">\n        <ul class=\"list\">\n            <!-- <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"加载完成!!!\" @load=\"onLoad\"> -->\n            <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"加载完成!!!\" >\n                <list-layout :firstLayout=\"0\" v-for=\"(item,index) in publishList\" :key=\"index\">\n                    <van-icon size=\"40\" color=\"rgb(81, 125, 252)\" name=\"info\" slot=\"left-icon\"/>\n                    <div slot=\"content\">\n                        <h4 @click=\"handleDetail(item.stationId)\">{{item.stationName}}</h4>\n                        <div>\n                            <span>{{item.workStartTime}}</span>\n                        </div>\n                    </div>\n                    <div slot=\"right\">\n                        <span class=\"date\">{{item.stationState}}</span>\n                        <div class=\"right-bottom\">\n                            <van-button v-if=\"item.stationState === '已生效'\" style=\"margin-left: 10px\"  color=\"rgb(81, 125, 252)\" size=\"mini\" @click=\"handleStart(item.stationId)\">开始</van-button>\n                            <van-button v-if=\"item.stationState === '已开始'\" style=\"margin-left: 10px\"  color=\"rgb(81, 125, 252)\" size=\"mini\" @click=\"handleStop(item.stationId)\">结束</van-button>\n                        </div>\n                    </div>\n                </list-layout>\n            </van-list>\n        </ul>\n    </van-tab>\n</template>\n\n<script>\nimport ListLayout from '@/components/common/ListLayout.vue'\nexport default {\n    data() {\n        return {\n            publishList: [],\n            show: false,\n            processStatus: 0,\n            pageNum: 1,\n            loading: false,\n            finished: false\n        }\n    },\n    components: {\n        // TopNav,\n        // BottomNav,\n        ListLayout,\n        // Tabs,\n        // shenpi,\n        // mystations\n    },\n    methods: {\n        async handleStart(id){\n            const res = await this.$ajax.post(\"/system/api/teacher/startStation\",{stationId : id})\n            if(res.data.code === 200){\n                this.$toast(\"成功开始该岗位!\");\n                this.getPublish()\n            }else{\n                this.$toast(\"操作失败,请重试～\");\n            }\n        },\n        async handleStop(id){\n            const res = await this.$ajax.post(\"/system/api/teacher/endStation\",{stationId : id})\n            if(res.data.code === 200){\n                this.$toast(\"成功结束该岗位!\");\n                this.getPublish()\n            }else{\n                this.$toast(\"操作失败,请重试～\");\n            }\n            \n        },\n        async handleDelete(index,id) {\n            console.log(this.publishList[index])\n            const res = await this.$ajax.post('/api/activiti/deleteProcess', {processInstanceId: id})\n            console.log(res.data)\n            if(res.data.code === 200) {\n                this.publishList.splice(index,1)\n                this.$toast.success(res.msg)\n            }else {\n                this.$toast.fail('删除失败，请稍后重试！')\n            }\n        },\n        handleDetail(id) {\n            this.$router.push({\n                path: '/jobInfo',\n                query: {\n                    stationId: id,\n                }\n            })\n        },\n        async getPublish() {\n            const res = await this.$ajax.get(`/system/api/teacher/queryTeacherStation`)\n            if(res.data) {\n                res.data.forEach(item => {\n                    item.workStartTime = item.workStartTime.slice(0,10);\n                    //没有更新时间 那么更新时间为创建时间\n                    // if(!item.updateTime){\n                    //     item.updateTime = item.createTime;\n                    // }else{\n                    //     item.updateTime = item.updateTime.slice(0,10);\n                    // }\n                    switch (item.stationState) {\n                            case \"1\":\n                                item.stationState = \"已生效\" // 暂且认为是 审核通过的叭\n                                break;\n                            case \"2\":\n                                item.stationState = \"已删除\"\n                                break;\n                            case \"3\":\n                                item.stationState = \"已开始\"\n                                break;\n                            case \"4\":\n                                item.stationState = \"已结束\"\n                                break;\n                            default:\n                                break;\n                        }\n                });\n                this.publishList = res.data\n                console.log(this.publishList);\n                this.finished = true\n                \n            }\n            \n        },\n       \n        async handleStep(processId) {\n            this.show = true\n            const res = await this.$ajax.get('/api/activiti/queryTaskDetails', {params: {processInstanceId: processId}})\n            console.log(res.data)\n            const status = res.data.data[0].rejectStatus\n            this.processStatus = parseInt(status)\n        }\n    },\n    mounted() {\n        this.getPublish()\n    }\n}\n</script>\n\n<style scoped>\n    .middle {\n        margin: 0 10px;\n    }\n    .van-cell {\n        margin-bottom: 10px;\n    }\n</style>"],"sourceRoot":"src/views/teacher/publish"}]}